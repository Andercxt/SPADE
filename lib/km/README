+++ Kernel module to intercept and log 'bind', 'connect', 'accept', 'accept4',
'sendto', 'sendmsg', 'sendmmsg', 'recvfrom', 'recvmsg', and 'recvmmsg' syscalls.

**** Code derived from: https://gitlab.tnichols.org/tyler/syscall_table_hooks/tree/master ***

*** IMPORTANT: DON'T try this module on a critical machine ***
*** IMPORTANT: DON'T try this module on a critical machine ***
*** IMPORTANT: DON'T try this module on a critical machine ***

REQUIREMENTS: 
	+ Must install linux headers. Command for ubuntu: 
		sudo apt-get install linux-headers-`uname -r`
	+ To be able to add/remove kernel module from Audit reporter run the following commands:
		sudo chmod ug+s `which insmod`
		sudo chmod ug+s `which rmmod`
		OR
		sudo chmod ug+s /bin/kmod ('insmod', and 'rmmod' use '/bin/kmod')
	
USAGE:
	+ The kernel module takes the following arguments:
		1) 'uids_ignore' list. The uids to ignore the intercepted system calls from.
		2) 'pids_ignore' list. The pids to ignore the intercepted system calls from.
		3) 'ppids_ignore' list. The ppids to ignore the intercepted system calls from.
		4) 'syscall_success' flag. The success of the syscalls to intercept. Values:
			a) '0' for only failed ones
			b) '1' for only successful ones
			c) '-1' for all
		5) 'net_io' flag. To toggle on/off intercepting 'sendto', 'sendmsg', 'sendmmsg', 
		   'recvfrom', 'recvmsg', and 'recvmmsg' syscalls.
			a) '0' for NOT intercepting the above-mentioned syscalls
			b) '1' for intercepting the above-mentioned syscalls

ADD MODULE (directly):
	+ Example command to ADD the module directly (make sure that all processes with 'pidof' below are running):
		insmod lib/km/netio.ko uids_ignore="`id -u`" pids_ignore="`pidof audispd`,`pidof auditd`,`pidof kauditd`" ppids_ignore="`pidof audispd`,`pidof auditd`,`pidof kauditd`" syscall_success="1" net_io="1"

ADD MODULE (through LIVE Audit reporter):
	+ Example control client command:
		add reporter Audit netIO=true addKm=true handleKmRecords=true

REMOVE MODULE:
	+ Example command to REMOVE the module directly:
		rmmod netio

ISSUES:
1) Getting socket struct from fd directly instead of sockfd_lookup function. It is working fine but not sure about all cases.
   Need to double check that. Search for "DOUBLE-CHECK" in 'lib/km/netio.c'.
2) A kernel OOPS thrown ALWAYS when kernel module removed from Audit reporter but haven't seen it happen when removed directly
   from terminal. Error seen with the format: "BUG: unable to handle kernel paging request at <memory address>". The SPADE control
   client crashes while the SPADE server runs fine. The Audit reporter and the kernel module are removed successfully though.
   Looking into this.
